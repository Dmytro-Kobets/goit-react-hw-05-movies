{"version":3,"file":"static/js/520.82d7696d.chunk.js","mappings":"yNAuCA,UAnCqB,WACnB,IAAMA,GAAKC,EAAAA,EAAAA,MACX,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,mCAAG,0FACjBH,EADiB,UACAI,EAAAA,EAAAA,IAAgBR,EAAGS,SADnB,kCAEjBH,GAAa,GAFI,2CAAH,qDAQhB,OAJAI,EAAAA,EAAAA,YAAU,WACRH,GACD,GAAE,IAECF,GACK,uBAAG,gBAIV,yBACGF,GAAWA,EAAQQ,OAAS,GAC3B,wBACGR,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOb,GADC,OAQrB,uBAAG,wCAIV,C","sources":["pages/MovieReviews.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/API';\n\nconst MovieReviews = () => {\n  const id = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getReviews = async () => {\n    setReviews(await getMovieReviews(id.movieId));\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    getReviews();\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There is no reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","getReviews","getMovieReviews","movieId","useEffect","length","map","review","author","content"],"sourceRoot":""}